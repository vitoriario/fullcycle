worker_processes auto;
worker_rlimit_nofile 100000;
error_log /var/log/nginx/error.log crit;


events {
  worker_connections 1024;
  use epoll;
  multi_accept on;

}

http {
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    access_log off;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # request timed out -- default 60
  client_body_timeout 10;

  # if client stop responding, free up memory -- default 60
  send_timeout 2;

  # server will close connection after this time -- default 75
  keepalive_timeout 30;

  # number of requests client can make over keep-alive -- for testing environment
  keepalive_requests 100000;

  upstream nodeapp {
    least_conn;
    server nodeapp:3000 max_fails=3 fail_timeout=20s;
  }
  server {
    listen 3001;
    server_name nginx;


    location /names {
      proxy_pass http://nodeapp/;
    }
    location /api/name {
      proxy_pass http://nodeapp/api/name;
    }
  }
}